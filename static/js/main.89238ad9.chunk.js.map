{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","wrap","map","el","btn","name","onClick","Notification","message","notification","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","title","stats","label","Section","children","section","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","prevState","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,MAAQ,4B,kBCA9HD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,+B,gBCA7DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,aAAe,qC,qICmBlBC,MAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,KAAlB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBAAiBJ,UAAWC,IAAEI,IAAKC,KAAMF,EAAIG,QAASR,EAAtD,SACGK,GADUA,S,gBCHfI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGT,UAAWC,IAAES,aAAhB,SAA+BD,KAGjCD,EAAaG,aAAe,CAC1BF,QAAS,qBAOID,Q,gBC+BAI,MA1Cf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,sBAAKjB,UAAWC,IAAEC,KAAlB,UACE,oBAAIF,UAAWC,IAAEiB,MAAjB,wBACW,IAAVF,EACC,sBAAKhB,UAAWC,IAAEkB,MAAlB,UACE,oBAAGnB,UAAWC,IAAEmB,MAAhB,kBAEE,+BAAOP,OAET,oBAAGb,UAAWC,IAAEmB,MAAhB,qBAEE,+BAAON,OAET,oBAAGd,UAAWC,IAAEmB,MAAhB,iBAEE,+BAAOL,OAET,oBAAGf,UAAWC,IAAEmB,MAAhB,mBAEE,+BAAOJ,OAET,oBAAGhB,UAAWC,IAAEmB,MAAhB,+BAEE,iCAAOH,EAAP,aAIJ,cAAC,EAAD,Q,gBCfOI,MAdf,YAAuC,IAApBH,EAAmB,EAAnBA,MAAOI,EAAY,EAAZA,SACxB,OACE,0BAAStB,UAAWC,IAAEsB,QAAtB,UACGL,GAAS,oBAAIlB,UAAWC,IAAEiB,MAAjB,SAAyBA,IAClCI,MCHME,EAAM,WACjB,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAoBMC,EAAqB,WACzB,OAAOhB,EAAOC,EAAUC,GAa1B,OACE,mCACE,eAAC,EAAD,CAASG,MAAM,wBAAf,UACE,cAAC,EAAD,CACEpB,QANQ,CAAC,OAAQ,UAAW,OAO5BC,gBAtCqB,SAAC+B,GAG5B,OAFYA,EAAEC,OAAOzB,MAGnB,IAAK,OACHoB,GAAQ,SAACM,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAeA,EAAY,SA6BlC,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,IACPZ,mBAtBgC,WACtC,IAAMD,EAAQa,IAId,OAFY,IAAVb,EAAciB,KAAKC,MAAc,IAAPrB,EAAcG,GAAS,EAmBzBmB,WCjD9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.89238ad9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Statistics_wrap__1eluO\",\"title\":\"Statistics_title__3PVIg\",\"stats\":\"Statistics_stats__3stUL\",\"label\":\"Statistics_label__227YU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"FeedbackOptions_wrap__3Obh3\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.wrap}>\n      {options.map((el) => (\n        <button key={el} className={s.btn} name={el} onClick={onLeaveFeedback}>\n          {el}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <p className={s.notification}>{message}</p>\n);\n\nNotification.defaultProps = {\n  message: \"No feedback given\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Notification from \"../Notification/Notification\";\nimport s from \"./Statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div className={s.wrap}>\n      <h2 className={s.title}>Statistics</h2>\n      {total !== 0 ? (\n        <div className={s.stats}>\n          <p className={s.label}>\n            Good:\n            <span>{good}</span>\n          </p>\n          <p className={s.label}>\n            Neutral:\n            <span>{neutral}</span>\n          </p>\n          <p className={s.label}>\n            Bad:\n            <span>{bad}</span>\n          </p>\n          <p className={s.label}>\n            Total:\n            <span>{total}</span>\n          </p>\n          <p className={s.label}>\n            Positive feedback:\n            <span>{positivePercentage}%</span>\n          </p>\n        </div>\n      ) : (\n        <Notification />\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { useState, Ref } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\n\nexport const App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const leaveFeedbackHandler = (e) => {\n    const key = e.target.name;\n\n    switch (key) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    const positivePercentage =\n      total !== 0 ? Math.round((good * 100) / total) : 0;\n\n    return positivePercentage;\n  };\n\n  const options = [\"good\", \"neutral\", \"bad\"];\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={leaveFeedbackHandler}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}